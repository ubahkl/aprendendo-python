 python pode guadar valores um uma variável. 
variávle faz referencia a um valor. 

Comando de atribuição é o igual (=). 

Basta colocar o nome da variavel no terminal , que o valor guardado aparece. 

 - identificador = tipo de dado 
ex : mensagem = 'arthur de arauj'
     pi = 3.14
     mensagem1 = 3

 
As variáveis que intercalaçao do underscore (_) - sao conheciddas como snake case.
para criar variaveis precisa sequir um padrão e nao usar palavra chave

Palavra chave = palavra reservada que o proprio python usa.

=====================================================================================

Operadores Aritméticos

  Fazer calculo utiliza -> +,-,*,/, **

  // -> representa a divisão inteira 
  % -> resto da divisão entre dois números inteiros
  ** -> 2**3 = 2 elevado a 3 
=====================================================================

Strings (texto)

1 - O  operador + com string , funciona concatenando string 
ex : >>> texto1 = 'oi'
     >>> texto2 = 'Python'
     texto1 + texto2
     oiPython
2 - O operador (*) multiplica as strings 
ex : >>> texto1 = 'python '
     >>> texto1 * 3
     python python python
* note a presenca dos espacos. - Para separar a palavra e não ficar grudada.

Strings possuem funcionalidades prontas chamadas de métodos. 

upper() - retorna o texto em maiusculas
capitalize() - retorna com a primeira letra em maiúscula

ex : 
texto1 = "python"
texto1.upper() ou print (texto1.upper())

Outras funcionalidades : 
https://docs.python.org/3/library/stdtypes.html#string-methods

====================================================================================

Entrada do Usuário 

python tem uma função que captura a entrada de valores = a funcao input()

input() - o programa espera o usuário digitar agum dado.

nome = input("Digite o nome do curso \n")
dado = input("Digite o numero")
print (nome) e print (dado)


Função = format() 
	ex : print ("O número digitado foi {}".format(numero))

A funcao format() vai subtituir {} pela variável que vc quer  , útil quando vc tem várias variáveis.

ex : 

nome = input("Digite seu nome \n")
idade = input("Digite sua idade \n")
print ("Seu nome é {} e sua idade é {}".format(nome,idade))


*obs - existem diversos tipos de (.format()) 
Para ponto flutuante é interresante utilizar --> {:.2f:}
Exemplo:
>>> x = 245.2346
>>> print('{:.2f}'.format(x))
    245.23

O :.2f diz que queremos apenas duas casas decimais para a variável x .

==================================================================================
=====================================================================================

Constantes 

constantes são valores que não mudam 

- true , false , none , são exemplos de constantes e palavra chave 

true(verdadeiro) e false(falso) são valores booleanos.

- Python tambem tem a funcao bool() - retorna true quando o argumento passado é verdadeiro 
e retorna false quando o argumento passado é falso. 

operador (==) é usado para comparação. 

** = e diferente ==**

Podemos utilizar > e < , para verificar se é maior ou menor.
bool() -> retornar false ou true. 


Operadores de Comparação 

==, >,<, >= , <= , !=(difirente)

Operadores que retornam valores booleanos !!

- a is b                   true, se a e b são indenticos
- a is not b               true , se a e b não sao identicos
- a in b                   true , se a é membro de b
- a not in b               true , se a não é menbro de b 

== e is são duas coisa diferentes !

Tudo em python é um objeto é cada objeto tem referencia na memória. 

===========================================================================
===========================================================================

--- Comando IF 

if (condicao):
	print ("")
else:
print ("")

outro modo:

if (condicao):
print
elif(condicao):
print
elif(condicao):
print

------------------
condicao = (expressao == expressao2)

=============================================
=============================================

---WHILE

se vc quer repetir um código ou laço.
sintaxe : while (condicao):
		print


OBS************** identacao para o comandos (if , elif , else, while), se não funciona !!!

==============================================================================================
==============================================================================================

Comando FOr 

loop for -> definir valor inicial e final que o loop incrementa automaticamente , com a funda range() 

Sintaxe : para variavel em uma serie de valores :
		faca algo 

sintaxe em python : 
	for rodada in range(1, 10):
		print("")

#Podemos definir um step(passo) é um intervalo entre os elementos.
por padrão(default) é 1. 

exemplo : 
for rodada in range(1,10,2):
	print (rodada)
...
...
1
3
5
7
9

##cada interação o laco pula dois passos (incrementa 2).

for rodada in [1,2,3,4,5,6,7,8,9,10]:
	print (rodada)

1
2
3
4
5
6
7
8
9
10
















